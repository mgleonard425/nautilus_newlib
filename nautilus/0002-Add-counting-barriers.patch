From 04092ffa45a1c873f6e06fee1da57d6136e12913 Mon Sep 17 00:00:00 2001
From: Peter Dinda <pdinda@northwestern.edu>
Date: Thu, 13 Jul 2017 14:38:21 -0500
Subject: [PATCH 02/10] Add counting barriers

---
 include/nautilus/barrier.h  | 41 ++++++++++++++++++++++++++++++++++++++++-
 include/nautilus/nautilus.h |  2 +-
 include/nautilus/spinlock.h |  2 +-
 3 files changed, 42 insertions(+), 3 deletions(-)

diff --git a/include/nautilus/barrier.h b/include/nautilus/barrier.h
index 9d010e3..0ce7631 100644
--- a/include/nautilus/barrier.h
+++ b/include/nautilus/barrier.h
@@ -8,7 +8,7 @@
  * led by Sandia National Laboratories that includes several national 
  * laboratories and universities. You can find out more at:
  * http://www.v3vee.org  and
- * http://xtack.sandia.gov/hobbes
+ * http://xstack.sandia.gov/hobbes
  *
  * Copyright (c) 2015, Kyle C. Hale <kh@u.northwestern.edu>
  * Copyright (c) 2015, The V3VEE Project  <http://www.v3vee.org> 
@@ -58,6 +58,45 @@ int nk_core_barrier_lower(void);
 int nk_core_barrier_wait(void); // waits on all other cores to arrive at barrier
 int nk_core_barrier_arrive(void); // arrive (and wait) at the core barrier
 
+
+// counting barriers
+
+typedef struct nk_counting_barrier {
+    // number of threads that must arrive at the barrier
+    // note that this can only be set when there is no barrier in progress
+    uint64_t      size;
+    uint64_t      count[2];
+    uint64_t      cur;
+} nk_counting_barrier_t;
+    
+
+static inline void nk_counting_barrier_init(nk_counting_barrier_t *b, uint64_t size)
+{
+    b->size=size; b->count[0]=b->count[1]=0; b->cur=0;
+}
+
+static inline void nk_counting_barrier(volatile nk_counting_barrier_t *b)
+{
+    uint64_t old;
+    volatile uint64_t *curp = &(b->cur);
+    long mycur = *curp;
+    volatile uint64_t *countp = &(b->count[mycur]);
+
+    old = __sync_fetch_and_add(countp,1);
+
+    if (old==(b->size-1)) {
+        // I'm the last to the party
+        *curp ^= 0x1;
+        *countp = 0;
+    } else {
+        // k1om compiler does not know what "volatile" means
+        // hence this hand-coding.
+        do {
+            __asm__ __volatile__( "pause; movq %1, %0" : "=r"(old) : "m"(*countp) : );
+        } while (old);
+    }
+}
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/include/nautilus/nautilus.h b/include/nautilus/nautilus.h
index 6c3254c..9704c81 100644
--- a/include/nautilus/nautilus.h
+++ b/include/nautilus/nautilus.h
@@ -8,7 +8,7 @@
  * led by Sandia National Laboratories that includes several national 
  * laboratories and universities. You can find out more at:
  * http://www.v3vee.org  and
- * http://xtack.sandia.gov/hobbes
+ * http://xstack.sandia.gov/hobbes
  *
  * Copyright (c) 2015, Kyle C. Hale <kh@u.northwestern.edu>
  * Copyright (c) 2015, The V3VEE Project  <http://www.v3vee.org> 
diff --git a/include/nautilus/spinlock.h b/include/nautilus/spinlock.h
index 3690430..2a381b8 100644
--- a/include/nautilus/spinlock.h
+++ b/include/nautilus/spinlock.h
@@ -8,7 +8,7 @@
  * led by Sandia National Laboratories that includes several national 
  * laboratories and universities. You can find out more at:
  * http://www.v3vee.org  and
- * http://xtack.sandia.gov/hobbes
+ * http://xstack.sandia.gov/hobbes
  *
  * Copyright (c) 2015, Kyle C. Hale <kh@u.northwestern.edu>
  * Copyright (c) 2015, The V3VEE Project  <http://www.v3vee.org> 
-- 
1.9.1

